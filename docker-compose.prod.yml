services:
    store:
        image: postgres:17.5-alpine3.22
        environment:
            - POSTGRES_PASSWORD=${STORE_PASSWORD}
            - POSTGRES_USER=${STORE_USER}
            - POSTGRES_DB=${STORE_DB}
        volumes:
            - pg-data:/var/lib/postgresql/data
        networks:
            - go-web
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${STORE_USER} -d ${STORE_DB}"]
            interval: 50s
            timeout: 5s
            retries: 5

    cache:
        image: memcached:1.6.38-alpine
        networks:
            - go-web

    backend:
        image: ghcr.io/livensmi1e/go-web:latest
        networks:
            - go-web
        env_file:
            - .env.prod
        depends_on:
            store:
                condition: service_healthy
            migrate:
                condition: service_completed_successfully

    migrate:
        image: migrate/migrate
        networks:
            - go-web
        restart: "no"
        command:
            [
                "-path=/migrations",
                "-database=postgres://${STORE_USER}:${STORE_PASSWORD}@store:5432/${STORE_DB}",
                "up",
            ]
        volumes:
            - ./migrations:/migrations
        depends_on:
            store:
                condition: service_healthy

volumes:
    pg-data:

networks:
    go-web:
        driver: bridge
